{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.jsx","components/Loader.jsx","services/cryptoApi.js","components/Exchanges.jsx","components/Homepage.jsx","components/Cryptocurrencies.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","services/cryptoNews.js","components/News.jsx","App.js","reportWebVitals.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","undefined","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","Loader","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getExchanges","getCryptoDetails","coinId","getCryptoHistory","timePeriod","useGetCryptosQuery","useGetExchangesQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","Text","Typography","Panel","Collapse","Exchanges","data","isFetching","exchangesList","exchanges","span","map","exchange","showArrow","header","rank","iconUrl","name","millify","volume","numberOfMarkets","marketShare","id","HTMLReactParser","description","Homepage","globalStats","stats","gutter","title","value","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","simplified","Cryptocurrencies","cryptosList","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","coins","filter","coin","toLowerCase","includes","placeholder","onChange","e","target","currency","xs","sm","lg","extra","alt","hoverable","price","marketCap","change","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimeStamp","console","log","i","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beingAtZero","Option","Select","CryptoDetails","useParams","setTimePeriod","cryptoDetails","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","links","link","type","href","rel","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImg","News","setNewsCategory","cryptoNews","showSelect","optionFilterProp","filterOption","input","option","children","toLowerCae","indexOf","news","image","thumbnail","contentUrl","substring","provider","moment","datePublished","startOf","fromNow","App","exact","path","element","style","color","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.7f2d7b83.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Menu, Typography, Avatar } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined} from \"@ant-design/icons\";\r\nimport icon from \"../images/cryptocurrency.png\";\r\n\r\n\r\nconst Navbar = () => {\r\n    const [activeMenu, setActiveMenu] = useState(true);\r\n    const [screenSize, setScreenSize] = useState(undefined);\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => setScreenSize(window.innerWidth);\r\n\r\n        window.addEventListener(`resize`, handleResize);\r\n\r\n        handleResize();\r\n\r\n        return () => window.removeEventListener(`resize`, handleResize);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(screenSize <= 800) {\r\n            setActiveMenu(false);\r\n        } else {\r\n            setActiveMenu(true);\r\n        }\r\n    }, [screenSize]);\r\n\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <div className=\"logo-container\">\r\n                <Avatar src={icon} size=\"large\" />\r\n                <Typography.Title level={2} className=\"logo\">\r\n                    <Link to=\"/\">CryptoProject</Link>\r\n                </Typography.Title>\r\n                <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}>\r\n                    <MenuOutlined />\r\n                </Button>\r\n                </div>\r\n                {activeMenu && (\r\n                    <Menu theme=\"dark\">\r\n                   <Menu.Item icon={<HomeOutlined />}>\r\n                       <Link to=\"/\">Home</Link>\r\n                   </Menu.Item>\r\n                   <Menu.Item icon={<FundOutlined />}>\r\n                       <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\r\n                   </Menu.Item>\r\n                   <Menu.Item icon={<MoneyCollectOutlined />}>\r\n                       <Link to=\"/exchanges\">Exchanges</Link>\r\n                   </Menu.Item>\r\n                   <Menu.Item icon={<BulbOutlined />}>\r\n                       <Link to=\"/news\">News</Link>\r\n                   </Menu.Item>\r\n               </Menu>\r\n                )}\r\n               \r\n               \r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { Spin } from 'antd';\r\n\r\nconst Loader = () => (\r\n  <div className=\"loader\">\r\n    <Spin />\r\n  </div>\r\n);\r\n\r\nexport default Loader;","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst cryptoApiHeaders = {\r\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\r\n    'x-rapidapi-key': '0ea6fb4ba5msh4a21c72af27e276p1d94b7jsnfbee2fff9402'\r\n};\r\n\r\nconst baseUrl = \"https://coinranking1.p.rapidapi.com/\";\r\n\r\nconst createRequest = (url) => ({ url, headers:cryptoApiHeaders});\r\n\r\nexport const cryptoApi = createApi({\r\n    reducerPath: \"crptoApi\",\r\n    baseQuery: fetchBaseQuery({ baseUrl }),\r\n    endpoints: (builder) => ({\r\n        getCryptos: builder.query({\r\n            query: ( count ) => createRequest(`/coins?limit=${count}`)\r\n        }),\r\n        getExchanges: builder.query({\r\n            query: () => createRequest('/exchanges'),\r\n          }),\r\n        getCryptoDetails: builder.query({\r\n            query: ( coinId ) => createRequest(`/coin/${coinId}`)\r\n        }),\r\n        getCryptoHistory: builder.query({\r\n            query: ({ coinId, timePeriod }) => createRequest(`/coin/${coinId}/history/${timePeriod}`)\r\n        })\r\n    })\r\n});\r\n\r\nexport const {\r\n    useGetCryptosQuery, \r\n    useGetExchangesQuery,\r\n    useGetCryptoDetailsQuery,\r\n    useGetCryptoHistoryQuery,\r\n} = cryptoApi;","import React from 'react';\r\nimport millify from 'millify';\r\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd';\r\nimport HTMLReactParser from 'html-react-parser';\r\nimport Loader from './Loader';\r\n\r\nimport { useGetExchangesQuery } from '../services/cryptoApi';\r\n// import Loader from './Loader';\r\n\r\nconst { Text } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nconst Exchanges = () => {\r\n  const { data, isFetching } = useGetExchangesQuery();\r\n  const exchangesList = data?.data?.exchanges;\r\n\r\n  if(isFetching) return <Loader />;\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={6}>Exchanges</Col>\r\n        <Col span={6}>24h Trade Volume</Col>\r\n        <Col span={6}>Markets</Col>\r\n        <Col span={6}>Change</Col>\r\n      </Row>\r\n      <Row>\r\n        {exchangesList.map((exchange) => (\r\n          <Col span={24}>\r\n            <Collapse>\r\n              <Panel\r\n                key={exchange.id}\r\n                showArrow={false}\r\n                header={(\r\n                  <Row key={exchange.id}>\r\n                    <Col span={6}>\r\n                      <Text><strong>{exchange.rank}.</strong></Text>\r\n                      <Avatar className=\"exchange-image\" src={exchange.iconUrl} />\r\n                      <Text><strong>{exchange.name}</strong></Text>\r\n                    </Col>\r\n                    <Col span={6}>${millify(exchange.volume)}</Col>\r\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\r\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\r\n                  </Row>\r\n                  )}\r\n              >\r\n                {HTMLReactParser(exchange.description || '')}\r\n              </Panel>\r\n            </Collapse>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Exchanges;","import React from \"react\";\r\nimport millify from \"millify\";\r\nimport { Typography, Row, Col, Statistic } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"./Loader\";\r\n\r\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\r\nimport { Cryptocurrencies, News } from \"../components\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Homepage = () => {\r\n    const { data, isFetching } = useGetCryptosQuery(10);\r\n    const globalStats = data?.data?.stats;\r\n\r\n    if(isFetching) return <Loader />;\r\n\r\n    // console.log(data)\r\n\r\n    return (\r\n        <>\r\n            <Title level={2} className=\"heading\">\r\n                Global Crypto Stats\r\n            </Title>\r\n\r\n            <Row gutter={[32, 32]}>\r\n                <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} /></Col>\r\n                <Col span={12}><Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)} /></Col>\r\n                <Col span={12}><Statistic title=\"Total Market Cap\" value={millify(globalStats.totalMarketCap)} /></Col>\r\n                <Col span={12}><Statistic title=\"Total 24h Volume\" value={millify(globalStats.total24hVolume)} /></Col>\r\n                <Col span={12}><Statistic title=\"Total Markets\" value={millify(globalStats.totalMarkets)} /></Col>\r\n            </Row>\r\n            <div className=\"home-heading-container\">\r\n                <Title level={2} className=\"home-title\">Top 10 Cryptocurrencies in the world</Title>\r\n                <Title level={3} className=\"show-more\"><Link to=\"/cryptocurrencies\">Show More</Link></Title>\r\n            </div>\r\n            <Cryptocurrencies simplified />\r\n            <div className=\"home-heading-container\">\r\n                <Title level={2} className=\"home-title\">Latest Crypto News</Title>\r\n                <Title level={3} className=\"show-more\"><Link to=\"/News\">Show More</Link></Title>\r\n            </div>\r\n            <News simplified />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Homepage;","import React, { useState, useEffect } from \"react\";\r\nimport millify from \"millify\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Row, Col, Input } from \"antd\";\r\nimport Loader from \"./Loader\";\r\n\r\n\r\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\r\n\r\nconst Cryptocurrencies = ({ simplified }) => {\r\n    const count = simplified ? 10 : 100;\r\n    const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\r\n    const [cryptos, setCryptos] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState(``);\r\n\r\n    useEffect(() => {\r\n\r\n        const filteredData = cryptosList?.data?.coins.filter((coin) => coin.name.toLowerCase().includes(searchTerm.toLowerCase()));\r\n\r\n        setCryptos(filteredData);\r\n    }, [cryptosList, searchTerm])\r\n\r\n    if(isFetching) return <Loader />;\r\n\r\n\r\n    return (\r\n        <>\r\n            {!simplified && (\r\n            <div className=\"search-crypto\">\r\n                <Input placeholder=\"Search for Crypto...\" onChange={(e) => setSearchTerm(e.target.value)} />\r\n            </div>\r\n            )}\r\n            <Row gutter={[32, 32]} className=\"crypto-card-container\">\r\n                {cryptos?.map((currency) => (\r\n                    <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\r\n                        <Link to={`/crypto/${currency.id}`}>\r\n                            <Card \r\n                            title={`${currency.rank}. ${currency.name}`}\r\n                            extra={<img className=\"crypto-image\" src={currency.iconUrl} alt={currency.name} />}\r\n                            hoverable>\r\n                                <p>Price: {millify(currency.price)}</p>\r\n                                <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                                <p>Daily Change: {millify(currency.change)}%</p>\r\n                            </Card>\r\n                        </Link>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Cryptocurrencies;","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { Col, Row, Typography } from \"antd\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n    const coinPrice = [];\r\n    const coinTimeStamp = [];\r\n    console.log(coinHistory);\r\n\r\n    for (let i=0; i < coinHistory?.data?.history?.length; i += 1) {\r\n        coinPrice.push(coinHistory.data.history[i].price);\r\n        coinTimeStamp.push(new Date(coinHistory.data.history[i].timestamp).toLocaleDateString());\r\n        console.log(coinPrice)\r\n    }\r\n\r\n    const data = {\r\n        labels: coinTimeStamp,\r\n        datasets: [\r\n            {\r\n                label: `Price in USD`,\r\n                data: coinPrice,\r\n                fill: false,\r\n                backgroundColor: `#0071bd`,\r\n                borderColor: `#0071bd`\r\n            }\r\n        ]\r\n    }\r\n\r\n    const options = {\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: {\r\n                        beingAtZero: true\r\n                    },\r\n                },\r\n            ]\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"chart-header\">\r\n                <Title level={2} className=\"chart.title\">{coinName} Price Chart</Title>\r\n                <Col className=\"price-container\">\r\n                    <Title level={5} className=\"price-change\">{coinHistory?.data?.change}%</Title>\r\n                    <Title level={5} className=\"current-price\">Current {coinName} Price: ${currentPrice}</Title>\r\n                </Col>\r\n            </Row>\r\n            <Line data={data} options={options} />\r\n        </>\r\n    )\r\n};\r\n\r\nexport default LineChart;","import React, { useState } from \"react\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\nimport { useParams } from \"react-router\";\r\nimport millify from \"millify\";\r\nimport { Col, Row, Typography, Select } from \"antd\";\r\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\r\nimport Loader from \"./Loader\";\r\n\r\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from \"../services/cryptoApi\";\r\nimport LineChart from \"./LineChart\";\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst CryptoDetails = () => {\r\n    const { coinId } = useParams();\r\n    const [timePeriod, setTimePeriod] = useState(`7d`);\r\n    const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\r\n    const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timePeriod });\r\n    const cryptoDetails = data?.data?.coin;\r\n\r\n    console.log(coinHistory);\r\n\r\n    if(isFetching) return <Loader />;\r\n\r\n    const time = ['24h', '7d', '30d', '3m', '1y', '3y', '5y'];\r\n\r\n  const stats = [\r\n    { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\r\n    { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n    { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\r\n    { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\r\n    { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\r\n  ];\r\n\r\n  const genericStats = [\r\n    { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\r\n    { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\r\n    { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\r\n    { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n    { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n  ];\r\n\r\n    return (\r\n        <Col className=\"coin-detail-container\">\r\n            <Col className=\"coin-heading-container\">\r\n                <Title level={2} className=\"coin-name\">\r\n                    {cryptoDetails.name} ({cryptoDetails.slug}) Price\r\n                </Title>\r\n                <p>\r\n                    {cryptoDetails.name} live price in US dollars. View value statistics, market cap and supply. \r\n                </p>\r\n            </Col>\r\n            <Select defaultValue=\"7d\" className=\"select-timeperiod\" placeholder=\"Select Time Period\" onChange={(value) => setTimePeriod(value)}>\r\n                {time.map((date) => <Option key={date}>{date}</Option>)}\r\n            </Select>\r\n            <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails.price)} coinName={cryptoDetails.name} />\r\n            <Col className=\"stats-container\">\r\n                <Col className=\"coin-value-statistics\">\r\n                    <Col className=\"coin-value-statistics-heading\">\r\n                        <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Value Statistics</Title>\r\n                        <p>\r\n                            An overview showing the stats of {cryptoDetails.name}\r\n                        </p>\r\n                    </Col>\r\n                    {stats.map(({ icon, title, value}) => (\r\n                        <Col className=\"coin-stats\">\r\n                            <Col className=\"coin-stats-name\">\r\n                                <Text>{icon}</Text>\r\n                                <Text>{title}</Text>\r\n                            </Col>\r\n                            <Text className=\"stats\">{value}</Text>\r\n                        </Col>\r\n                    ))}\r\n                </Col>\r\n                <Col className=\"other-stats-info\">\r\n                    <Col className=\"coin-value-statistics-heading\">\r\n                        <Title level={3} className=\"coin-details-heading\">Other Statistics</Title>\r\n                        <p>\r\n                            An overview showing the stats of all cryptocurrencies.\r\n                        </p>\r\n                    </Col>\r\n                    {genericStats.map(({ icon, title, value}) => (\r\n                        <Col className=\"coin-stats\">\r\n                            <Col className=\"coin-stats-name\">\r\n                                <Text>{icon}</Text>\r\n                                <Text>{title}</Text>\r\n                            </Col>\r\n                            <Text className=\"stats\">{value}</Text>\r\n                        </Col>\r\n                    ))}\r\n                </Col>\r\n            </Col>\r\n\r\n            <Col className=\"coin-desc-link\">\r\n                <Row className=\"coin-desc\">\r\n                    <Title level={3} className=\"coin-details-heading\">\r\n                        What is {cryptoDetails.name}?\r\n                        {HTMLReactParser(cryptoDetails.description)}\r\n                    </Title>\r\n                </Row>\r\n                <Col className=\"coin-links\">\r\n                    <Title level={3} className=\"coin-details-heading\">\r\n                        {cryptoDetails.name} Links\r\n                    </Title>\r\n                    {console.log(cryptoDetails.links)}\r\n                    {cryptoDetails.links.map((link) => (\r\n                        <Row className=\"coin-link\" key={link.name}>\r\n                            <Title level={5} className=\"link-name\">\r\n                                {link.type}\r\n                            </Title>\r\n                            <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\r\n                                {link.name}\r\n                            </a>\r\n                        </Row>\r\n                    ))}\r\n                </Col>\r\n            </Col>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default CryptoDetails;","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst cryptoNewsHeaders = {\r\n    'x-bingapis-sdk': 'true',\r\n    'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\r\n    'x-rapidapi-key': '0ea6fb4ba5msh4a21c72af27e276p1d94b7jsnfbee2fff9402'\r\n  }\r\n\r\nconst baseUrl = \"https://bing-news-search1.p.rapidapi.com\";\r\n\r\nconst createRequest = (url) => ({ url, headers:cryptoNewsHeaders});\r\n\r\nexport const cryptoNewsApi = createApi({\r\n    reducerPath: \"crptoNewsApi\",\r\n    baseQuery: fetchBaseQuery({ baseUrl }),\r\n    endpoints: (builder) => ({\r\n        getCryptoNews: builder.query({\r\n            query: ({ newsCategory, count }) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`)\r\n        })\r\n    })\r\n});\r\n\r\nexport const {\r\n    useGetCryptoNewsQuery\r\n} = cryptoNewsApi;","import React, { useState } from \"react\";\r\nimport { Select, Typography, Row, Col, Avatar, Card } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { useGetCryptoNewsQuery } from \"../services/cryptoNews\";\r\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\r\n\r\nconst { Text, Title } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst demoImg = \"https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News\";\r\n\r\nconst News = ({ simplified }) => {\r\n    const [newsCategory, setNewsCategory] = useState(`Cryptocurrency`);\r\n    const { data: cryptoNews } = useGetCryptoNewsQuery({ newsCategory: newsCategory, count: \r\n        simplified ? 6 : 12});\r\n    const { data } = useGetCryptosQuery(100);\r\n\r\n    if(!cryptoNews?.value) return \"Loading...\";\r\n    return (\r\n       <Row gutter={[24, 24]}>\r\n           {!simplified && (\r\n               <Col span={24}>\r\n                   <Select\r\n                    showSelect\r\n                    className=\"select-news\"\r\n                    placeholder=\"Select a Crypto...\"\r\n                    optionFilterProp=\"children\"\r\n                    onChange={(value) => setNewsCategory(value)}\r\n                    filterOption={(input, option) => option.children.toLowerCae().indexOf(input.toLowerCase()) >= 0}>\r\n                        <Option value=\"Cryptocurtrency\">Cryptocurrency</Option>\r\n                        {data?.data?.coins.map((coin) => <Option value={coin.name}>{coin.name}</Option>)}\r\n                   </Select>\r\n               </Col>\r\n           )}\r\n           {cryptoNews.value.map((news, i) => (\r\n               <Col xs={24} sm={12} lg={8} key={i}>\r\n                   <Card hoverable className=\"news-card\">\r\n                       <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\r\n                           <div className=\"news-large-container\">\r\n                               <Title className=\"news-title\" level={4}>{news.name}</Title>\r\n                               <img src={news?.image?.thumbnail?.contentUrl || demoImg} alt=\"news\" />\r\n                           </div>\r\n                           <p>\r\n                               {news.description > 100 ? `${news.description.substring(0, 100)}...` : `${news.description}`}\r\n                           </p>\r\n                           <div className=\"provider-container\">\r\n                               <div>\r\n                                   <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImg} />\r\n                                   <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\r\n                               </div>\r\n                                   <Text>{moment(news.datePublished).startOf(`ss`).fromNow()}</Text>\r\n                           </div>\r\n                       </a>\r\n                   </Card>\r\n               </Col>\r\n           ))}\r\n       </Row>\r\n    );\r\n}\r\n\r\nexport default News;","import React from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport { Layout, Typography, Space } from \"antd\";\n\nimport { Navbar, Exchanges, Homepage, Cryptocurrencies, News, CryptoDetails } from \"./components\";\n\nimport \"./App.css\";\n\n\n\nconst App = () => (\n    <div className=\"App\">\n      <div className=\"navbar\">\n        <Navbar />\n      </div>\n\n      <div className=\"main\">\n       <Layout>\n        <div className=\"routes\">\n          <Routes>\n            <Route exact path=\"/\" element={<Homepage />} />\n            <Route exact path=\"/exchanges\" element={<Exchanges />} />\n            <Route exact path=\"/cryptocurrencies\" element={<Cryptocurrencies />} />\n            <Route exact path=\"/crypto/:coinId\" element={<CryptoDetails />} />\n            <Route exact path=\"/news\" element={<News />} />\n          </Routes>\n        </div>\n       </Layout>\n     \n\n     <div className=\"footer\">\n      <Typography.Title level={5} style={{ color: \"white\", textAlign: \"center\"}}>\n        Crypto Code Along <br />\n        Jyll Wright\n      </Typography.Title>\n      <Space>\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/exchanges\">Exchanges</Link>\n        <Link to=\"/news\">News</Link>\n      </Space>\n     </div>\n     </div>\n    </div>\n  );\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport { cryptoApi } from \"../services/cryptoApi\";\r\nimport { cryptoNewsApi } from \"../services/cryptoNews\"\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n        [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer\r\n    },\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport store from \"./app/store\";\n\nReactDOM.render(\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}