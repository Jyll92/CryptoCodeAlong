{"ast":null,"code":"import{createApi,fetchBaseQuery}from\"@reduxjs/toolkit/query/react\";var cryptoApiHeaders={'x-rapidapi-host':'coinranking1.p.rapidapi.com','x-rapidapi-key':'0ea6fb4ba5msh4a21c72af27e276p1d94b7jsnfbee2fff9402'};var baseUrl=\"https://coinranking1.p.rapidapi.com/\";var createRequest=function createRequest(url){return{url:url,headers:cryptoApiHeaders};};export var cryptoApi=createApi({reducerPath:\"crptoApi\",baseQuery:fetchBaseQuery({baseUrl:baseUrl}),endpoints:function endpoints(builder){return{getCryptos:builder.query({query:function query(count){return createRequest(\"/coins?limit=\".concat(count));}}),getExchanges:builder.query({query:function query(){return createRequest('/exchanges');}}),getCryptoDetails:builder.query({query:function query(coinId){return createRequest(\"/coin/\".concat(coinId));}}),getCryptoHistory:builder.query({query:function query(_ref){var coinId=_ref.coinId,timePeriod=_ref.timePeriod;return createRequest(\"/coin/\".concat(coinId,\"/history/\").concat(timePeriod));}})};}});var useGetCryptosQuery=cryptoApi.useGetCryptosQuery,useGetExchangesQuery=cryptoApi.useGetExchangesQuery,useGetCryptoDetailsQuery=cryptoApi.useGetCryptoDetailsQuery,useGetCryptoHistoryQuery=cryptoApi.useGetCryptoHistoryQuery;export{useGetCryptosQuery,useGetExchangesQuery,useGetCryptoDetailsQuery,useGetCryptoHistoryQuery};","map":{"version":3,"sources":["C:/Users/Jyllana/Desktop/ReactApps/crypto-code-along/src/services/cryptoApi.js"],"names":["createApi","fetchBaseQuery","cryptoApiHeaders","baseUrl","createRequest","url","headers","cryptoApi","reducerPath","baseQuery","endpoints","builder","getCryptos","query","count","getExchanges","getCryptoDetails","coinId","getCryptoHistory","timePeriod","useGetCryptosQuery","useGetExchangesQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery"],"mappings":"AAAA,OAASA,SAAT,CAAoBC,cAApB,KAA0C,8BAA1C,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,CACrB,kBAAmB,6BADE,CAErB,iBAAkB,oDAFG,CAAzB,CAKA,GAAMC,CAAAA,OAAO,CAAG,sCAAhB,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,GAAD,QAAU,CAAEA,GAAG,CAAHA,GAAF,CAAOC,OAAO,CAACJ,gBAAf,CAAV,EAAtB,CAEA,MAAO,IAAMK,CAAAA,SAAS,CAAGP,SAAS,CAAC,CAC/BQ,WAAW,CAAE,UADkB,CAE/BC,SAAS,CAAER,cAAc,CAAC,CAAEE,OAAO,CAAPA,OAAF,CAAD,CAFM,CAG/BO,SAAS,CAAE,mBAACC,OAAD,QAAc,CACrBC,UAAU,CAAED,OAAO,CAACE,KAAR,CAAc,CACtBA,KAAK,CAAE,eAAEC,KAAF,QAAaV,CAAAA,aAAa,wBAAiBU,KAAjB,EAA1B,EADe,CAAd,CADS,CAIrBC,YAAY,CAAEJ,OAAO,CAACE,KAAR,CAAc,CACxBA,KAAK,CAAE,uBAAMT,CAAAA,aAAa,CAAC,YAAD,CAAnB,EADiB,CAAd,CAJO,CAOrBY,gBAAgB,CAAEL,OAAO,CAACE,KAAR,CAAc,CAC5BA,KAAK,CAAE,eAAEI,MAAF,QAAcb,CAAAA,aAAa,iBAAUa,MAAV,EAA3B,EADqB,CAAd,CAPG,CAUrBC,gBAAgB,CAAEP,OAAO,CAACE,KAAR,CAAc,CAC5BA,KAAK,CAAE,wBAAGI,CAAAA,MAAH,MAAGA,MAAH,CAAWE,UAAX,MAAWA,UAAX,OAA4Bf,CAAAA,aAAa,iBAAUa,MAAV,qBAA4BE,UAA5B,EAAzC,EADqB,CAAd,CAVG,CAAd,EAHoB,CAAD,CAA3B,CAmBA,GACHC,CAAAA,kBADG,CAKHb,SALG,CACHa,kBADG,CAEHC,oBAFG,CAKHd,SALG,CAEHc,oBAFG,CAGHC,wBAHG,CAKHf,SALG,CAGHe,wBAHG,CAIHC,wBAJG,CAKHhB,SALG,CAIHgB,wBAJG,C","sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst cryptoApiHeaders = {\r\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\r\n    'x-rapidapi-key': '0ea6fb4ba5msh4a21c72af27e276p1d94b7jsnfbee2fff9402'\r\n};\r\n\r\nconst baseUrl = \"https://coinranking1.p.rapidapi.com/\";\r\n\r\nconst createRequest = (url) => ({ url, headers:cryptoApiHeaders});\r\n\r\nexport const cryptoApi = createApi({\r\n    reducerPath: \"crptoApi\",\r\n    baseQuery: fetchBaseQuery({ baseUrl }),\r\n    endpoints: (builder) => ({\r\n        getCryptos: builder.query({\r\n            query: ( count ) => createRequest(`/coins?limit=${count}`)\r\n        }),\r\n        getExchanges: builder.query({\r\n            query: () => createRequest('/exchanges'),\r\n          }),\r\n        getCryptoDetails: builder.query({\r\n            query: ( coinId ) => createRequest(`/coin/${coinId}`)\r\n        }),\r\n        getCryptoHistory: builder.query({\r\n            query: ({ coinId, timePeriod }) => createRequest(`/coin/${coinId}/history/${timePeriod}`)\r\n        })\r\n    })\r\n});\r\n\r\nexport const {\r\n    useGetCryptosQuery, \r\n    useGetExchangesQuery,\r\n    useGetCryptoDetailsQuery,\r\n    useGetCryptoHistoryQuery,\r\n} = cryptoApi;"]},"metadata":{},"sourceType":"module"}